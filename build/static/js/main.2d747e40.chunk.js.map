{"version":3,"sources":["services/themealdb.service.ts","components/layout/category-menu/CategoryMenu.tsx","components/layout/footer/Footer.tsx","components/layout/search/Search.tsx","store/menu-category/types.ts","components/layout/topbar/TopBar.tsx","store/menu-category/actions.ts","components/loading/Loading.tsx","components/tooltip/Tooltip.tsx","components/recipe-card/RecipeCard.tsx","services/favorite-recipe.service.ts","store/category-filter/actions.ts","store/category-filter/types.ts","store/favorite-recipe/actions.ts","store/favorite-recipe/types.ts","pages/categories/CategoriesPage.tsx","store/category-filter/thunks.ts","components/recipe-detail/recipe-ingredient/RecipeIngredient.tsx","components/recipe-detail/recipe-preparation/RecipePreparation.tsx","components/youtube-player/YoutubePlayer.tsx","store/load-recipe/types.ts","store/load-recipe/actions.ts","store/load-recipe/thunks.ts","pages/recipe-detail/RecipeDetailPage.tsx","pages/recipe-list/RecipeListPage.tsx","store/search-recipe/types.ts","store/search-recipe/thunks.ts","store/search-recipe/actions.ts","pages/search/SearchPage.tsx","routes.tsx","store/category-filter/reducer.ts","store/favorite-recipe/reducer.ts","store/load-recipe/reducer.ts","store/menu-category/reducer.ts","store/search-recipe/reducer.ts","store/index.ts","App.tsx","index.tsx","assets/logo.svg"],"names":["api","categories","get","then","response","data","map","cat","id","idCategory","name","strCategory","imgUrl","strCategoryThumb","description","strCategoryDescription","findById","meals","length","parseMealToRecipe","undefined","filterByCategory","category","meal","idMeal","title","strMeal","titleUnique","replace","toLowerCase","search","categoryName","preparations","strInstructions","split","strMealThumb","youtubeUrl","strYoutube","ingredients","parseIngredients","tags","strTags","Object","keys","filter","attr","startsWith","forEach","push","measure","this","axios","create","baseURL","CategoryMenu","useState","setCategories","history","useHistory","open","useSelector","state","menuCategory","useEffect","TheMealDBService","className","Grid","container","item","xs","hidden","ButtonBase","key","disableTouchRipple","onClick","Avatar","src","alt","Typography","variant","Footer","Divider","Box","color","padding","href","target","rel","Search","props","placeholder","term","setTerm","searchRecipe","termState","loading","location","useLocation","pathname","Paper","onSubmit","e","preventDefault","InputBase","autoFocus","value","onChange","Button","type","disabled","CircularProgress","size","TOGGLE","TopBar","dispatch","useDispatch","AppBar","position","Toolbar","to","Logo","style","display","flexDirection","Loading","Tooltip","children","placement","classes","makeStyles","theme","arrow","palette","common","black","tooltip","backgroundColor","RecipeCard","recipe","handleFavorite","isFavorite","isFavoriteIcon","setFavoriteIcon","toolTipTitle","Card","elevation","CardMedia","component","height","image","CardContent","gutterBottom","IconButton","onMouseEnter","onMouseLeave","disableRipple","fontSize","INITIAL_RECIPES","storageName","recipes","getFavorites","getById","find","remove","localStorage","setItem","JSON","stringify","save","saved","getItem","parse","categoryFilterRequest","payload","categoryFilterSuccess","removeFavoriteRecipe","saveFavoriteRecipe","CategoriesPage","router","categoryFilter","favorites","favoriteRecipes","a","CategoryFilterActions","recipeSimples","Promise","all","simple","some","favoriteRecipe","spacing","sm","md","FavoriteRecipeService","FavoriteRecipeActions","removeToFavorite","saveToFavorite","RecipeIngredient","checked","setChecked","i","ListItem","button","dense","c","ListItemIcon","ListItemText","primary","RecipePreparation","step","idx","paddingBottom","YoutubePlayer","embedUrl","width","frameBorder","allow","allowFullScreen","LOAD_REQUEST","LOAD_SUCCESS","loadRecipeSucess","loadRecipe","_title","LoadRecipeActions","console","error","RecipeDetailPage","setFavorite","fr","justify","startIcon","marginTop","RecipeListPage","React","removeFavorite","SEARCH_REQUEST","SEARCH_SUCCESS","SearchRecipeActions","res","SearchPage","param","termParam","URLSearchParams","f","createBrowserHistory","Routes","path","exact","INITIAL_STATE","initialState","rootReducer","combineReducers","connectRouter","action","middlewares","routerMiddleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2d747e40.chunk.js","sourcesContent":["import axios, { AxiosInstance } from 'axios';\r\n\r\nimport { Recipe, RecipeSimple } from 'src/models/Recipe';\r\n\r\nimport { Category } from '../models/Category';\r\n\r\nclass TheMealDBService {\r\n  private api: AxiosInstance;\r\n\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: 'https://www.themealdb.com/api/json/v1/1',\r\n    });\r\n  }\r\n\r\n  categories = (): Promise<Category[]> =>\r\n    this.api\r\n      .get('categories.php')\r\n      .then((response) => response.data)\r\n      .then(({ categories }) =>\r\n        categories.map(\r\n          (cat: any) =>\r\n            ({\r\n              id: cat.idCategory,\r\n              name: cat.strCategory,\r\n              imgUrl: cat.strCategoryThumb,\r\n              description: cat.strCategoryDescription,\r\n            } as Category),\r\n        ),\r\n      );\r\n\r\n  findById = (id: string): Promise<Recipe | undefined> =>\r\n    this.api\r\n      .get(`/lookup.php?i=${id}`)\r\n      .then((response) => response.data)\r\n      .then(({ meals }) =>\r\n        meals && meals.length > 0\r\n          ? this.parseMealToRecipe(meals[0])\r\n          : undefined,\r\n      );\r\n\r\n  filterByCategory = (category: string): Promise<RecipeSimple[]> =>\r\n    this.api\r\n      .get(`filter.php?c=${category}`)\r\n      .then((response) => response.data)\r\n      .then(({ meals }) =>\r\n        meals\r\n          ? meals.map(\r\n              (meal: any) =>\r\n                ({\r\n                  id: meal.idMeal,\r\n                  title: meal.strMeal,\r\n                  titleUnique: `${meal.idMeal}-${meal.strMeal\r\n                    .replace(/ /g, '-')\r\n                    .toLowerCase()}`,\r\n                } as RecipeSimple),\r\n            )\r\n          : [],\r\n      );\r\n\r\n  search = (name: string): Promise<Recipe[]> =>\r\n    this.api\r\n      .get(`search.php?s=${name}`)\r\n      .then((response) => response.data)\r\n      .then(({ meals }) =>\r\n        meals ? meals.map((meal: any) => this.parseMealToRecipe(meal)) : [],\r\n      );\r\n\r\n  private parseMealToRecipe = (meal: any): Recipe =>\r\n    ({\r\n      id: meal.idMeal,\r\n      title: meal.strMeal,\r\n      titleUnique: `${meal.idMeal}-${meal.strMeal\r\n        .replace(/ /g, '-')\r\n        .toLowerCase()}`,\r\n      categoryName: meal.strCategory,\r\n      preparations: meal.strInstructions.split('\\r\\n'),\r\n      imgUrl: meal.strMealThumb,\r\n      youtubeUrl: meal.strYoutube\r\n        ? meal.strYoutube.replace(\r\n            'https://www.youtube.com/watch?v=',\r\n            'https://www.youtube.com/embed/',\r\n          )\r\n        : undefined,\r\n      ingredients: this.parseIngredients(meal),\r\n      tags: meal.strTags,\r\n    } as Recipe);\r\n\r\n  private parseIngredients = (\r\n    meal: any,\r\n  ): { name: string; measure: string }[] => {\r\n    const ingredients: { name: string; measure: string }[] = [];\r\n    Object.keys(meal)\r\n      .filter((attr) => attr.startsWith('strIngredient') && meal[attr])\r\n      .forEach((attr) => {\r\n        ingredients.push({\r\n          name: meal[attr],\r\n          measure: meal[`strMeasure${attr[attr.length - 1]}`],\r\n        });\r\n      });\r\n\r\n    return ingredients;\r\n  };\r\n}\r\n\r\nexport default new TheMealDBService();\r\n","import './CategoryMenu.scss';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Category } from 'src/models/Category';\r\nimport TheMealDBService from 'src/services/themealdb.service';\r\nimport { AppState } from 'src/store';\r\n\r\nexport const CategoryMenu: React.FC = () => {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const history = useHistory();\r\n  const open = useSelector((state: AppState) => state.menuCategory.open);\r\n\r\n  useEffect(() => {\r\n    TheMealDBService.categories().then((response) => {\r\n      setCategories(response);\r\n    });\r\n  }, []);\r\n\r\n  const handleCategoryClick = (name: string) => {\r\n    history.push(`/categories/${name}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"category-menu-container\">\r\n      <Grid container>\r\n        <Grid item xs={12} className=\"menu-open\" hidden={!open}>\r\n          {categories &&\r\n            categories.map((cat) => (\r\n              <ButtonBase\r\n                key={cat.id}\r\n                disableTouchRipple\r\n                onClick={() => handleCategoryClick(cat.name)}\r\n              >\r\n                <Avatar\r\n                  src={cat.imgUrl}\r\n                  alt={cat.name}\r\n                  className=\"category-icon\"\r\n                />\r\n                <Typography variant=\"caption\">{cat.name}</Typography>\r\n              </ButtonBase>\r\n            ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport './Footer.scss';\r\n\r\nexport const Footer: React.FC = () => (\r\n  <div className=\"footer-container\">\r\n    <Divider />\r\n    <Box color=\"primary.contrastText\" padding={2} className=\"box\">\r\n      Made with&nbsp;\r\n      <Favorite />\r\n      &nbsp;by&nbsp;\r\n      <a\r\n        href=\"http://shrouded-peak-88216.herokuapp.com/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <strong>team  \r\n\r\n          chat \r\n        </strong>\r\n      </a>\r\n    </Box>\r\n  </div>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { AppState } from 'src/store';\r\n\r\nimport './Search.scss';\r\n\r\ntype SearchProps = {\r\n  placeholder: string;\r\n};\r\n\r\nexport const Search: React.FC<SearchProps> = (props: SearchProps) => {\r\n  const { placeholder } = props;\r\n  const [term, setTerm] = useState('');\r\n  const { term: termState, loading } = useSelector(\r\n    (state: AppState) => state.searchRecipe,\r\n  );\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname !== '/search') {\r\n      setTerm('');\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setTerm(termState);\r\n  }, [termState]);\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (term) {\r\n      history.push(`/search?q=${term}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <Paper variant=\"outlined\">\r\n        <div className=\"search-icon\">\r\n          <SearchIcon color=\"secondary\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <InputBase\r\n            placeholder={placeholder}\r\n            className=\"search-input\"\r\n            autoFocus\r\n            value={term}\r\n            onChange={(e) => setTerm(e.target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : 'Search'}\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * State\r\n */\r\nexport interface MenuCategoryState {\r\n  open: boolean;\r\n}\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const TOGGLE = '@menuCategory/TOGGLE';\r\n\r\n/**\r\n * Actions Types\r\n */\r\nexport interface MenuCategoryToggleAction {\r\n  type: typeof TOGGLE;\r\n}\r\n","import './TopBar.scss';\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AppBar, Toolbar, Typography, Avatar } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nimport Logo from 'src/assets/logo.svg';\r\nimport * as MenuCategoryActions from 'src/store/menu-category/actions';\r\n\r\nexport const TopBar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"topbar-container\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"toolbar-container\">\r\n          <Link to=\"/\" className=\"logo-name\">\r\n            <img src={Logo} alt=\"Logo\" />\r\n            <Typography variant=\"h6\">Social recipe</Typography>\r\n          </Link>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n            <Avatar\r\n              className=\"category-btn avatar\"\r\n              onClick={() => dispatch(MenuCategoryActions.toggle())}\r\n            >\r\n              <ListIcon />\r\n            </Avatar>\r\n            <Link to=\"/\">\r\n              <Avatar className=\"avatar\">\r\n                <FavoriteIcon />\r\n              </Avatar>\r\n            </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  TOGGLE,\r\n  MenuCategoryToggleAction,\r\n} from 'src/store/menu-category/types';\r\n\r\nexport const toggle = (): MenuCategoryToggleAction => ({\r\n  type: TOGGLE,\r\n});\r\n","import './Loading.scss';\r\n\r\nimport React from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport const Loading = () => (\r\n  <div className=\"loading-container\">\r\n    <CircularProgress size={100} color=\"secondary\" />\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  Tooltip as TooltipMaterialUI,\r\n} from '@material-ui/core';\r\n\r\ntype TooltipProps = {\r\n  children: React.ReactElement;\r\n  title: string;\r\n  placement?:\r\n    | 'bottom-end'\r\n    | 'bottom-start'\r\n    | 'bottom'\r\n    | 'left-end'\r\n    | 'left-start'\r\n    | 'left'\r\n    | 'right-end'\r\n    | 'right-start'\r\n    | 'right'\r\n    | 'top-end'\r\n    | 'top-start'\r\n    | 'top';\r\n};\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = (props: TooltipProps) => {\r\n  const { children, title, placement } = props;\r\n\r\n  const classes = makeStyles((theme: Theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <TooltipMaterialUI\r\n      arrow\r\n      classes={classes()}\r\n      title={title}\r\n      placement={placement}\r\n    >\r\n      {children}\r\n    </TooltipMaterialUI>\r\n  );\r\n};\r\n","import './RecipeCard.scss';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\n\r\nimport { Tooltip } from 'src/components/tooltip/Tooltip';\r\nimport { Recipe } from 'src/models/Recipe';\r\n\r\ninterface RecipeCardProps {\r\n  recipe: Recipe;\r\n  handleFavorite: () => void;\r\n  isFavorite: boolean;\r\n}\r\n\r\nexport const RecipeCard: React.FC<RecipeCardProps> = (\r\n  props: RecipeCardProps,\r\n) => {\r\n  const { recipe, handleFavorite, isFavorite } = props;\r\n  const [isFavoriteIcon, setFavoriteIcon] = useState(isFavorite);\r\n  const toolTipTitle = isFavorite ? 'Remove favorite' : 'Save favorite';\r\n\r\n  return (\r\n    <div className=\"recipe-card-container\">\r\n      <Card elevation={3}>\r\n        <Link to={`/recipe/${recipe.titleUnique}`}>\r\n          <div className=\"card-media\">\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={recipe.title}\r\n              height=\"200\"\r\n              image={recipe.imgUrl}\r\n              title={recipe.title}\r\n            />\r\n          </div>\r\n        </Link>\r\n        <CardContent>\r\n          <div className=\"content-header\">\r\n            <Link to={`/recipe/${recipe.titleUnique}`} className=\"title\">\r\n              <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\r\n                {recipe.title}\r\n              </Typography>\r\n            </Link>\r\n\r\n            <div className=\"favorite-btn\">\r\n              <Tooltip title={toolTipTitle} placement=\"top\">\r\n                <IconButton\r\n                  onMouseEnter={() => setFavoriteIcon(false)}\r\n                  onMouseLeave={() => setFavoriteIcon(true)}\r\n                  onClick={() => {\r\n                    handleFavorite();\r\n                    setFavoriteIcon(true);\r\n                  }}\r\n                  disableRipple\r\n                >\r\n                  <FavoriteBorderIcon\r\n                    fontSize=\"large\"\r\n                    color=\"secondary\"\r\n                    style={{ display: !isFavorite ? 'block' : 'none' }}\r\n                  />\r\n                  <FavoriteIcon\r\n                    fontSize=\"large\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      display: isFavoriteIcon && isFavorite ? 'block' : 'none',\r\n                    }}\r\n                  />\r\n                  <CloseIcon\r\n                    fontSize=\"large\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      display: !isFavoriteIcon && isFavorite ? 'block' : 'none',\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"content-info\">\r\n            <ViewListIcon color=\"secondary\" />\r\n            <Typography variant=\"caption\">{recipe.categoryName}</Typography>\r\n          </div>\r\n\r\n          <div className=\"content-info\">\r\n            {recipe.tags && (\r\n              <>\r\n                <LocalOfferIcon color=\"secondary\" />\r\n                <Typography variant=\"caption\">{recipe.tags}</Typography>\r\n              </>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\n/* eslint-disable max-len */\r\nconst INITIAL_RECIPES = [\r\n  {\r\n    id: '52772',\r\n    title: 'Teriyaki Chicken Casserole',\r\n    titleUnique: `52772-${'Teriyaki Chicken Casserole'\r\n      .replace(/ /g, '-')\r\n      .toLowerCase()}`,\r\n    categoryName: 'Chicken',\r\n    preparations: [\r\n      'Preheat oven to 350° F. Spray a 9x13-inch baking pan with non-stick spray.',\r\n      'Combine soy sauce, ½ cup water, brown sugar, ginger and garlic in a small saucepan and cover. Bring to a boil over medium heat. Remove lid and cook for one minute once boiling.',\r\n      'Meanwhile, stir together the corn starch and 2 tablespoons of water in a separate dish until smooth. Once sauce is boiling, add mixture to the saucepan and stir to combine. Cook until the sauce starts to thicken then remove from heat.',\r\n      'Place the chicken breasts in the prepared pan. Pour one cup of the sauce over top of chicken. Place chicken in oven and bake 35 minutes or until cooked through. Remove from oven and shred chicken in the dish using two forks.',\r\n      '*Meanwhile, steam or cook the vegetables according to package directions.',\r\n      'Add the cooked vegetables and rice to the casserole dish with the chicken. Add most of the remaining sauce, reserving a bit to drizzle over the top when serving. Gently toss everything together in the casserole dish until combined. Return to oven and cook 15 minutes. Remove from oven and let stand 5 minutes before serving. Drizzle each serving with remaining sauce. Enjoy!',\r\n    ],\r\n    imgUrl: 'https://www.themealdb.com/images/media/meals/wvpsxx1468256321.jpg',\r\n    tags: 'Meat,Casserole',\r\n    ingredients: [\r\n      { measure: '3/4 cup', name: 'soy sauce' },\r\n      { measure: '1/2 cup', name: 'water' },\r\n      { measure: '1/4 cup', name: 'brown sugar' },\r\n      { measure: '1/2 teaspoon', name: 'ground ginger' },\r\n      { measure: '1/2 teaspoon', name: 'minced garlic' },\r\n      { measure: '4 Tablespoons', name: 'cornstarch' },\r\n      { measure: '2', name: 'chicken breasts' },\r\n      { measure: '1 (12 oz.)', name: 'stir-fry vegetables' },\r\n      { measure: '3 cups', name: 'brown rice' },\r\n    ],\r\n    youtubeUrl: 'https://www.youtube.com/embed/4aZr5hZXP_s',\r\n  },\r\n  {\r\n    id: '52838',\r\n    title: 'Venetian Duck Ragu',\r\n    titleUnique: `52838-${'Venetian Duck Ragu'\r\n      .replace(/ /g, '-')\r\n      .toLowerCase()}`,\r\n    categoryName: 'Pasta',\r\n    preparations: [\r\n      'Heat the oil in a large pan. Add the duck legs and brown on all sides for about 10 mins. Remove to a plate and set aside. Add the onions to the pan and cook for 5 mins until softened. Add the garlic and cook for a further 1 min, then stir in the cinnamon and flour and cook for a further min. Return the duck to the pan, add the wine, tomatoes, stock, herbs, sugar and seasoning. Bring to a simmer, then lower the heat, cover with a lid and cook for 2 hrs, stirring every now and then.',\r\n      'Carefully lift the duck legs out of the sauce and place on a plate – they will be very tender so try not to lose any of the meat. Pull off and discard the fat, then shred the meat with 2 forks and discard the bones. Add the meat back to the sauce with the milk and simmer, uncovered, for a further 10-15 mins while you cook the pasta.',\r\n      'Cook the pasta following pack instructions, then drain, reserving a cup of the pasta water, and add the pasta to the ragu. Stir to coat all the pasta in the sauce and cook for 1 min more, adding a splash of cooking liquid if it looks dry. Serve with grated Parmesan, if you like.',\r\n    ],\r\n    imgUrl: 'https://www.themealdb.com/images/media/meals/qvrwpt1511181864.jpg',\r\n    tags: null,\r\n    ingredients: [\r\n      { measure: '1 tbls', name: 'Olive Oil' },\r\n      { measure: '4', name: 'Duck Legs' },\r\n      { measure: '2 finely chopped', name: 'Onions' },\r\n      { measure: '2 cloves minced', name: 'Garlic' },\r\n      { measure: '2 tsp ground', name: 'Cinnamon' },\r\n      { measure: '2 tsp', name: 'Plain Flour' },\r\n      { measure: '250ml', name: 'Red Wine' },\r\n      { measure: '800g', name: 'Chopped Tomatoes' },\r\n      { measure: '1', name: 'Chicken Stock Cube' },\r\n      { measure: '3 sprigs', name: 'Rosemary' },\r\n      { measure: '2', name: 'Bay Leaves' },\r\n      { measure: '1 tsp ', name: 'Sugar' },\r\n      { measure: '2 tbs', name: 'Milk' },\r\n      { measure: '600g', name: 'Paccheri Pasta' },\r\n      { measure: 'Grated', name: 'Parmesan Cheese' },\r\n    ],\r\n    youtubeUrl: 'https://www.youtube.com/embed/oWQDVgjB_Lw',\r\n  },\r\n  {\r\n    id: '52869',\r\n    title: 'Tahini Lentils',\r\n    titleUnique: `52869-${'Tahini Lentils'.replace(/ /g, '-').toLowerCase()}`,\r\n    categoryName: 'Vegetarian',\r\n    preparations: [\r\n      'In a jug, mix the tahini with the zest and juice of the lemon and 50ml of cold water to make a runny dressing. Season to taste, then set aside.',\r\n      'Heat the oil in a wok or large frying pan over a medium-high heat. Add the red onion, along with a pinch of salt, and fry for 2 mins until starting to soften and colour. Add the garlic, pepper, green beans and courgette and fry for 5 min, stirring frequently.',\r\n      'Tip in the kale, lentils and the tahini dressing. Keep the pan on the heat for a couple of mins, stirring everything together until the kale is wilted and it’s all coated in the creamy dressing.',\r\n    ],\r\n    imgUrl: 'https://www.themealdb.com/images/media/meals/vpxyqt1511464175.jpg',\r\n    tags: 'Pulse',\r\n    ingredients: [\r\n      { measure: '50g', name: 'Tahini' },\r\n      { measure: 'zest and juice of 1', name: 'Lemon' },\r\n      { measure: '2 tblsp ', name: 'Olive Oil' },\r\n      { measure: '1 chopped', name: 'Red Onions' },\r\n      { measure: '1 clove peeled crushed', name: 'Garlic' },\r\n      { measure: '1 thinly sliced', name: 'Yellow Pepper' },\r\n      { measure: '200g', name: 'Green Beans' },\r\n      { measure: '1 sliced', name: 'Courgettes' },\r\n      { measure: '100g shredded', name: 'Kale' },\r\n      { measure: '250g pack', name: 'Lentils' },\r\n    ],\r\n    youtubeUrl: 'https://www.youtube.com/embed/8kRlmz8pW0I',\r\n  },\r\n];\r\n/* eslint-enable max-len */\r\n\r\nclass FavoriteRecipeService {\r\n  private storageName = '@RecipeApp/Favorites';\r\n\r\n  private recipes: Recipe[] = [];\r\n\r\n  constructor() {\r\n    const saved = localStorage.getItem(this.storageName);\r\n    if (!saved) {\r\n      localStorage.setItem(this.storageName, JSON.stringify(INITIAL_RECIPES));\r\n      this.recipes = INITIAL_RECIPES;\r\n    } else {\r\n      this.recipes = JSON.parse(saved);\r\n    }\r\n  }\r\n\r\n  getFavorites = (): Recipe[] => this.recipes;\r\n\r\n  getById = (id: string): Recipe | undefined =>\r\n    this.recipes.find((recipe) => recipe.id === id);\r\n\r\n  remove = (id: string): void => {\r\n    this.recipes = this.recipes.filter((recipe) => recipe.id !== id);\r\n    localStorage.setItem(this.storageName, JSON.stringify(this.recipes));\r\n  };\r\n\r\n  save = (recipe: Recipe): void => {\r\n    this.recipes.push(recipe);\r\n    localStorage.setItem(this.storageName, JSON.stringify(this.recipes));\r\n  };\r\n}\r\n\r\nexport default new FavoriteRecipeService();\r\n","import { Recipe } from 'src/models/Recipe';\r\nimport {\r\n  CategoryFilterRequestAction,\r\n  CategoryFilterSuccessAction,\r\n  FILTER_SUCCESS,\r\n  FILTER_REQUEST,\r\n} from 'src/store/category-filter/types';\r\n\r\nexport const categoryFilterRequest = (\r\n  categoryName: string,\r\n): CategoryFilterRequestAction => ({\r\n  type: FILTER_REQUEST,\r\n  payload: {\r\n    categoryName,\r\n  },\r\n});\r\n\r\nexport const categoryFilterSuccess = (\r\n  recipes: Recipe[],\r\n): CategoryFilterSuccessAction => ({\r\n  type: FILTER_SUCCESS,\r\n  payload: {\r\n    recipes,\r\n  },\r\n});\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\n/**\r\n * State Type\r\n */\r\nexport interface CategoryFilterState {\r\n  recipes: Recipe[];\r\n  categoryName: string;\r\n  loading: boolean;\r\n}\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const FILTER_REQUEST = '@categoryFilter@REQUEST';\r\nexport const FILTER_SUCCESS = '@categoryFilter@SUCCESS';\r\n\r\n/**\r\n * Actions Types\r\n */\r\nexport interface CategoryFilterRequestAction {\r\n  type: typeof FILTER_REQUEST;\r\n  payload: {\r\n    categoryName: string;\r\n  };\r\n}\r\n\r\nexport interface CategoryFilterSuccessAction {\r\n  type: typeof FILTER_SUCCESS;\r\n  payload: {\r\n    recipes: Recipe[];\r\n  };\r\n}\r\n\r\nexport type CategoryFilterActionTypes =\r\n  | CategoryFilterRequestAction\r\n  | CategoryFilterSuccessAction;\r\n","import { Recipe } from 'src/models/Recipe';\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\n\r\nimport {\r\n  LoadFavoriteRecipesAction,\r\n  LOAD_FAVORITE_RECIPES,\r\n  RemoveFavoriteRecipeAction,\r\n  REMOVE_FAVORITE_RECIPE,\r\n  SaveFavoriteRecipeAction,\r\n  SAVE_FAVORITE_RECIPE,\r\n} from './types';\r\n\r\nexport const loadFavoriteRecipes = (): LoadFavoriteRecipesAction => ({\r\n  type: LOAD_FAVORITE_RECIPES,\r\n  payload: {\r\n    recipes: FavoriteRecipeService.getFavorites(),\r\n  },\r\n});\r\n\r\nexport const removeFavoriteRecipe = (\r\n  recipe: Recipe,\r\n): RemoveFavoriteRecipeAction => ({\r\n  type: REMOVE_FAVORITE_RECIPE,\r\n  payload: {\r\n    recipe,\r\n  },\r\n});\r\n\r\nexport const saveFavoriteRecipe = (\r\n  recipe: Recipe,\r\n): SaveFavoriteRecipeAction => ({\r\n  type: SAVE_FAVORITE_RECIPE,\r\n  payload: {\r\n    recipe,\r\n  },\r\n});\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\n/**\r\n * State Type\r\n */\r\nexport interface FavoriteRecipeState {\r\n  recipes: Recipe[];\r\n}\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const LOAD_FAVORITE_RECIPES = '@favoriteRecipe/LOAD';\r\nexport const REMOVE_FAVORITE_RECIPE = '@favoriteRecipe/REMOVE';\r\nexport const SAVE_FAVORITE_RECIPE = '@favoriteRecipe/SAVE';\r\n\r\n/**\r\n * Actions Types\r\n */\r\nexport interface LoadFavoriteRecipesAction {\r\n  type: typeof LOAD_FAVORITE_RECIPES;\r\n  payload: {\r\n    recipes: Recipe[];\r\n  };\r\n}\r\n\r\nexport interface RemoveFavoriteRecipeAction {\r\n  type: typeof REMOVE_FAVORITE_RECIPE;\r\n  payload: {\r\n    recipe: Recipe;\r\n  };\r\n}\r\n\r\nexport interface SaveFavoriteRecipeAction {\r\n  type: typeof SAVE_FAVORITE_RECIPE;\r\n  payload: {\r\n    recipe: Recipe;\r\n  };\r\n}\r\n\r\nexport type FavoriteRecipeActionTypes =\r\n  | LoadFavoriteRecipesAction\r\n  | RemoveFavoriteRecipeAction\r\n  | SaveFavoriteRecipeAction;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Loading } from 'src/components/loading/Loading';\r\nimport { RecipeCard } from 'src/components/recipe-card/RecipeCard';\r\nimport { Recipe } from 'src/models/Recipe';\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\nimport { AppState } from 'src/store';\r\nimport { filter } from 'src/store/category-filter/thunks';\r\nimport * as FavoriteRecipeActions from 'src/store/favorite-recipe/actions';\r\n\r\nexport const CategoriesPage: React.FC = () => {\r\n  const { pathname } = useSelector((state: AppState) => state.router.location);\r\n  const categoryName = pathname.split('/')[2];\r\n\r\n  const { recipes, loading } = useSelector(\r\n    (state: AppState) => state.categoryFilter,\r\n  );\r\n  const favorites = useSelector(\r\n    (state: AppState) => state.favoriteRecipes.recipes,\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filter(categoryName));\r\n  }, [categoryName, dispatch]);\r\n\r\n  const isFavorite = (recipe: Recipe) =>\r\n    favorites.some((favoriteRecipe) => favoriteRecipe.id === recipe.id);\r\n\r\n  const saveToFavorite = (recipe: Recipe) => {\r\n    FavoriteRecipeService.save(recipe);\r\n    dispatch(FavoriteRecipeActions.saveFavoriteRecipe(recipe));\r\n  };\r\n\r\n  const removeToFavorite = (recipe: Recipe) => {\r\n    FavoriteRecipeService.remove(recipe.id);\r\n    dispatch(FavoriteRecipeActions.removeFavoriteRecipe(recipe));\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-list-container\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Paper variant=\"outlined\" className=\"recipe-list-content\">\r\n          <Typography variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            {`Recipes for: ${categoryName}`}\r\n          </Typography>\r\n\r\n          <Divider className=\"divider\" />\r\n\r\n          <Grid container spacing={2}>\r\n            {!recipes.length && (\r\n              <Grid item xs={12}>\r\n                <p>Sorry. No recipes found</p>\r\n              </Grid>\r\n            )}\r\n            {recipes.map((recipe) => (\r\n              <Grid key={recipe.id} item xs={12} sm={6} md={4}>\r\n                <RecipeCard\r\n                  handleFavorite={() =>\r\n                    isFavorite(recipe)\r\n                      ? removeToFavorite(recipe)\r\n                      : saveToFavorite(recipe)\r\n                  }\r\n                  isFavorite={isFavorite(recipe)}\r\n                  recipe={recipe}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Dispatch } from 'redux';\r\n\r\nimport { Recipe } from 'src/models/Recipe';\r\nimport TheMealDBService from 'src/services/themealdb.service';\r\nimport * as CategoryFilterActions from 'src/store/category-filter/actions';\r\n\r\nexport const filter = (categoryName: string) => async (\r\n  dispatch: Dispatch,\r\n): Promise<void> => {\r\n  dispatch(CategoryFilterActions.categoryFilterRequest(categoryName));\r\n\r\n  const recipeSimples = await TheMealDBService.filterByCategory(categoryName);\r\n\r\n  const recipes = await Promise.all(\r\n    recipeSimples.map((simple) => TheMealDBService.findById(simple.id)),\r\n  );\r\n\r\n  dispatch(\r\n    CategoryFilterActions.categoryFilterSuccess(\r\n      recipes.filter((recipe) => !!recipe) as Recipe[],\r\n    ),\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\ntype RecipeIngredientProps = {\r\n  ingredients: { name: string; measure: string }[];\r\n};\r\n\r\nexport const RecipeIngredient: React.FC<RecipeIngredientProps> = (\r\n  props: RecipeIngredientProps,\r\n) => {\r\n  const { ingredients } = props;\r\n  const [checked, setChecked] = useState<string[]>([]);\r\n\r\n  const handleToggle = (name: string) => () => {\r\n    if (checked.some((c) => c === name)) {\r\n      setChecked(checked.filter((c) => c !== name));\r\n    } else {\r\n      setChecked([...checked, name]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-ingredient-container\">\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        Ingredients\r\n      </Typography>\r\n      <Divider className=\"divider\" />\r\n      <List>\r\n        {ingredients &&\r\n          ingredients.map((i) => (\r\n            <ListItem key={i.name} button dense onClick={handleToggle(i.name)}>\r\n              <ListItemIcon>\r\n                {checked.some((c) => c === i.name) ? (\r\n                  <FavoriteIcon color=\"secondary\" />\r\n                ) : (\r\n                  <FavoriteBorderIcon color=\"secondary\" />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <span>\r\n                    <strong>{i.measure}</strong>\r\n                    &nbsp;\r\n                    {i.name}\r\n                  </span>\r\n                }\r\n                style={{ fontSize: '20px' }}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype RecipePreparationProps = {\r\n  preparations: string[];\r\n};\r\n\r\nexport const RecipePreparation: React.FC<RecipePreparationProps> = (\r\n  props: RecipePreparationProps,\r\n) => {\r\n  const { preparations } = props;\r\n  return (\r\n    <div className=\"recipe-preparation-container\">\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        Preparation\r\n      </Typography>\r\n\r\n      <Divider className=\"divider\" />\r\n\r\n      <Grid container>\r\n        {preparations &&\r\n          preparations.map((step, idx) => (\r\n            <>\r\n              <Grid\r\n                item\r\n                md={2}\r\n                xs={12}\r\n                key={step}\r\n                style={{ paddingBottom: '20px' }}\r\n              >\r\n                <Typography variant=\"h4\" component=\"h3\">\r\n                  Step&nbsp;\r\n                  {idx + 1}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item md={10} style={{ paddingBottom: '20px' }}>\r\n                <Typography variant=\"body2\">{step}</Typography>\r\n              </Grid>\r\n            </>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ntype YoutubePlayerProps = {\r\n  title: string;\r\n  embedUrl: string;\r\n  width?: string;\r\n  height?: string;\r\n};\r\n\r\nexport const YoutubePlayer: React.FC<YoutubePlayerProps> = (\r\n  props: YoutubePlayerProps,\r\n) => {\r\n  const { title, embedUrl, width, height } = props;\r\n\r\n  return (\r\n    <iframe\r\n      title={title}\r\n      width={width ?? '100%'}\r\n      height={height ?? '300'}\r\n      src={embedUrl}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n    />\r\n  );\r\n};\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\n/**\r\n * State\r\n */\r\nexport interface LoadRecipeState {\r\n  recipe: Recipe | undefined;\r\n  loading: boolean;\r\n}\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const LOAD_REQUEST = '@loadRecipe/LOAD_REQUEST';\r\nexport const LOAD_SUCCESS = '@loadRecipe/LOAD_SUCCESS';\r\n\r\n/**\r\n * Actions Types\r\n */\r\nexport interface LoadRecipeRequestAction {\r\n  type: typeof LOAD_REQUEST;\r\n  payload: {\r\n    titleUnique: string;\r\n  };\r\n}\r\n\r\nexport interface LoadRecipeSucessAction {\r\n  type: typeof LOAD_SUCCESS;\r\n  payload: {\r\n    recipe: Recipe;\r\n  };\r\n}\r\n\r\nexport type LoadRecipeActionTypes =\r\n  | LoadRecipeRequestAction\r\n  | LoadRecipeSucessAction;\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\nimport {\r\n  LoadRecipeRequestAction,\r\n  LOAD_REQUEST,\r\n  LOAD_SUCCESS,\r\n  LoadRecipeSucessAction,\r\n} from './types';\r\n\r\nexport const loadRecipeRequest = (\r\n  titleUnique: string,\r\n): LoadRecipeRequestAction => ({\r\n  type: LOAD_REQUEST,\r\n  payload: {\r\n    titleUnique,\r\n  },\r\n});\r\n\r\nexport const loadRecipeSucess = (recipe: Recipe): LoadRecipeSucessAction => ({\r\n  type: LOAD_SUCCESS,\r\n  payload: { recipe },\r\n});\r\n","import { Dispatch } from 'redux';\r\n\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\nimport TheMealDBService from 'src/services/themealdb.service';\r\nimport * as LoadRecipeActions from 'src/store/load-recipe/actions';\r\n\r\nexport const loadRecipe = (title: string) => (dispatch: Dispatch): void => {\r\n  const [id, _title] = title.split(' ');\r\n  dispatch(LoadRecipeActions.loadRecipeRequest(_title));\r\n\r\n  const saved = FavoriteRecipeService.getById(id);\r\n  if (saved) {\r\n    dispatch(LoadRecipeActions.loadRecipeSucess(saved));\r\n  } else {\r\n    TheMealDBService.findById(id).then((recipe) => {\r\n      if (recipe) {\r\n        dispatch(LoadRecipeActions.loadRecipeSucess(recipe));\r\n      } else {\r\n        // TODO: Modify to use dispatch() with errors, displaying a alert to users\r\n        // eslint-disable-next-line no-console\r\n        console.error(`Error recipe ${title} not found`);\r\n      }\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport { Loading } from 'src/components/loading/Loading';\r\nimport { RecipeIngredient } from 'src/components/recipe-detail/recipe-ingredient/RecipeIngredient';\r\nimport { RecipePreparation } from 'src/components/recipe-detail/recipe-preparation/RecipePreparation';\r\nimport { YoutubePlayer } from 'src/components/youtube-player/YoutubePlayer';\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\nimport { AppState } from 'src/store';\r\nimport * as FavoriteRecipeActions from 'src/store/favorite-recipe/actions';\r\nimport { loadRecipe } from 'src/store/load-recipe/thunks';\r\n\r\nimport './RecipeDetailPage.scss';\r\n\r\nexport const RecipeDetailPage: React.FC = () => {\r\n  const { pathname } = useLocation();\r\n  const [isFavorite, setFavorite] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { loading, recipe } = useSelector(\r\n    (state: AppState) => state.loadRecipe,\r\n  );\r\n  const favoriteRecipes = useSelector(\r\n    (state: AppState) => state.favoriteRecipes.recipes,\r\n  );\r\n\r\n  useEffect(() => {\r\n    setFavorite(favoriteRecipes.some((fr) => fr.title === recipe?.title));\r\n  }, [recipe, favoriteRecipes]);\r\n\r\n  useEffect(() => {\r\n    const titleUnique = pathname.split('/recipe/')[1];\r\n    const title = titleUnique.replace(/-/g, ' ');\r\n    dispatch(loadRecipe(title));\r\n  }, [pathname, dispatch]);\r\n\r\n  const handleFavorite = () => {\r\n    if (recipe) {\r\n      if (isFavorite) {\r\n        FavoriteRecipeService.remove(recipe.id);\r\n        dispatch(FavoriteRecipeActions.removeFavoriteRecipe(recipe));\r\n      } else {\r\n        FavoriteRecipeService.save(recipe);\r\n        dispatch(FavoriteRecipeActions.saveFavoriteRecipe(recipe));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-detail-container\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Grid container justify=\"space-between\">\r\n            <Typography variant=\"h6\" component=\"h2\" color=\"primary\">\r\n              {recipe?.title}\r\n            </Typography>\r\n\r\n            <Button\r\n              variant={isFavorite ? 'contained' : 'outlined'}\r\n              color=\"primary\"\r\n              onClick={handleFavorite}\r\n              startIcon={\r\n                isFavorite ? (\r\n                  <Favorite fontSize=\"large\" />\r\n                ) : (\r\n                  <FavoriteBorder fontSize=\"large\" />\r\n                )\r\n              }\r\n            >\r\n              {isFavorite ? 'Favorited' : 'Favorite'}\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Divider className=\"divider\" />\r\n\r\n          {recipe?.youtubeUrl && (\r\n            <YoutubePlayer title={recipe.title} embedUrl={recipe.youtubeUrl} />\r\n          )}\r\n\r\n          <Paper elevation={6} style={{ marginTop: 20, padding: 20 }}>\r\n            <Grid container spacing={5}>\r\n              <Grid item md={6} xs={12}>\r\n                <img\r\n                  src={recipe?.imgUrl}\r\n                  alt={recipe?.title}\r\n                  className=\"recipe-img\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} style={{ width: '100%' }}>\r\n                {recipe?.ingredients && (\r\n                  <RecipeIngredient ingredients={recipe.ingredients} />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n          {recipe?.preparations && (\r\n            <Paper elevation={3} style={{ marginTop: 20, padding: 20 }}>\r\n              <RecipePreparation preparations={recipe.preparations} />\r\n            </Paper>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import './RecipeListPage.scss';\r\n\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { RecipeCard } from 'src/components/recipe-card/RecipeCard';\r\nimport { Recipe } from 'src/models/Recipe';\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\nimport { AppState } from 'src/store';\r\nimport * as FavoriteRecipeActions from 'src/store/favorite-recipe/actions';\r\n\r\nexport const RecipeListPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const recipes = useSelector(\r\n    (state: AppState) => state.favoriteRecipes.recipes,\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(FavoriteRecipeActions.loadFavoriteRecipes());\r\n  }, [dispatch]);\r\n\r\n  const removeFavorite = (recipe: Recipe): void => {\r\n    FavoriteRecipeService.remove(recipe.id);\r\n    dispatch(FavoriteRecipeActions.removeFavoriteRecipe(recipe));\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-list-container\">\r\n      <Paper variant=\"outlined\" className=\"recipe-list-content\">\r\n        <Typography variant=\"h6\" component=\"h2\" color=\"primary\">\r\n          My Favorite Recipes\r\n        </Typography>\r\n        <Divider className=\"divider\" />\r\n        <Grid container spacing={2}>\r\n          {!recipes.length && (\r\n            <Grid item>\r\n              <Typography>You have not favorites yet.</Typography>\r\n            </Grid>\r\n          )}\r\n          {recipes.map((recipe) => (\r\n            <Grid key={recipe.id} item xs={12} sm={6} md={4}>\r\n              <RecipeCard\r\n                handleFavorite={() => removeFavorite(recipe)}\r\n                isFavorite\r\n                recipe={recipe}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\n/**\r\n * State Type\r\n */\r\nexport interface SearchRecipeState {\r\n  term: string;\r\n  recipes: Recipe[];\r\n  loading: boolean;\r\n}\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const SEARCH_REQUEST = '@searchRecipe/SEARCH_REQUEST';\r\nexport const SEARCH_SUCCESS = '@searchRecipe/SEARCH_SUCCESS';\r\n\r\n/**\r\n * Actions Types\r\n */\r\nexport interface SearchRecipeLoadAction {\r\n  type: typeof SEARCH_REQUEST;\r\n  payload: {\r\n    term: string;\r\n  };\r\n}\r\n\r\nexport interface SearchRecipeSucessAction {\r\n  type: typeof SEARCH_SUCCESS;\r\n  payload: {\r\n    recipes: Recipe[];\r\n  };\r\n}\r\n\r\nexport type SearchRecipeActionTypes =\r\n  | SearchRecipeLoadAction\r\n  | SearchRecipeSucessAction;\r\n","import { push } from 'connected-react-router';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport TheMealDBService from 'src/services/themealdb.service';\r\n\r\nimport * as SearchRecipeActions from './actions';\r\n\r\nexport const search = (term: string) => (dispatch: Dispatch): void => {\r\n  dispatch(SearchRecipeActions.searchRecipeLoad(term));\r\n\r\n  TheMealDBService.search(term)\r\n    .then((res) => dispatch(SearchRecipeActions.searchRecipeSucess(res)))\r\n    .then(() => dispatch(push(`/search?q=${term}`)));\r\n};\r\n","import { Recipe } from 'src/models/Recipe';\r\n\r\nimport {\r\n  SearchRecipeLoadAction,\r\n  SearchRecipeSucessAction,\r\n  SEARCH_REQUEST,\r\n  SEARCH_SUCCESS,\r\n} from './types';\r\n\r\nexport const searchRecipeLoad = (term: string): SearchRecipeLoadAction => ({\r\n  type: SEARCH_REQUEST,\r\n  payload: { term },\r\n});\r\n\r\nexport const searchRecipeSucess = (\r\n  recipes: Recipe[],\r\n): SearchRecipeSucessAction => ({\r\n  type: SEARCH_SUCCESS,\r\n  payload: { recipes },\r\n});\r\n","import './SearchPage.scss';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Loading } from 'src/components/loading/Loading';\r\nimport { RecipeCard } from 'src/components/recipe-card/RecipeCard';\r\nimport { Recipe } from 'src/models/Recipe';\r\nimport FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\nimport { AppState } from 'src/store';\r\nimport * as FavoriteRecipeActions from 'src/store/favorite-recipe/actions';\r\nimport { search } from 'src/store/search-recipe/thunks';\r\n\r\nfunction useQuery(param: string) {\r\n  return new URLSearchParams(useLocation().search).get(param);\r\n}\r\n\r\nexport const SearchPage: React.FC = () => {\r\n  const { recipes, term, loading } = useSelector(\r\n    (state: AppState) => state.searchRecipe,\r\n  );\r\n  const favorites = useSelector(\r\n    (state: AppState) => state.favoriteRecipes.recipes,\r\n  );\r\n  const dispatch = useDispatch();\r\n  const termParam = useQuery('q');\r\n\r\n  useEffect(() => {\r\n    if (termParam) {\r\n      dispatch(search(termParam));\r\n    }\r\n  }, [termParam, dispatch]);\r\n\r\n  const isFavorite = (recipe: Recipe) =>\r\n    favorites.some((f) => f.id === recipe.id);\r\n\r\n  const saveToFavorite = (recipe: Recipe) => {\r\n    FavoriteRecipeService.save(recipe);\r\n    dispatch(FavoriteRecipeActions.saveFavoriteRecipe(recipe));\r\n  };\r\n\r\n  const removeToFavorite = (recipe: Recipe) => {\r\n    FavoriteRecipeService.remove(recipe.id);\r\n    dispatch(FavoriteRecipeActions.removeFavoriteRecipe(recipe));\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-list-container\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Paper variant=\"outlined\" className=\"recipe-list-content\">\r\n          <Typography variant=\"h6\" component=\"h2\" color=\"primary\">\r\n            {term && `Search for: ${term}`}\r\n          </Typography>\r\n          <Divider className=\"divider\" />\r\n          <Grid container spacing={2}>\r\n            {!recipes.length && (\r\n              <Grid item xs={12}>\r\n                <p>Sorry. No recipes found</p>\r\n              </Grid>\r\n            )}\r\n            {recipes.map((recipe) => (\r\n              <Grid key={recipe.id} item xs={12} sm={6} md={4}>\r\n                <RecipeCard\r\n                  handleFavorite={() =>\r\n                    isFavorite(recipe)\r\n                      ? removeToFavorite(recipe)\r\n                      : saveToFavorite(recipe)\r\n                  }\r\n                  isFavorite={isFavorite(recipe)}\r\n                  recipe={recipe}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { createBrowserHistory } from 'history';\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { CategoriesPage } from 'src/pages/categories/CategoriesPage';\r\nimport { RecipeDetailPage } from 'src/pages/recipe-detail/RecipeDetailPage';\r\nimport { RecipeListPage } from 'src/pages/recipe-list/RecipeListPage';\r\nimport { SearchPage } from 'src/pages/search/SearchPage';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={RecipeListPage} />\r\n    <Route path=\"/recipe/:title\" component={RecipeDetailPage} />\r\n    <Route path=\"/search\" component={SearchPage} />\r\n    <Route path=\"/categories/:name\" component={CategoriesPage} />\r\n    <Route path=\"*\" component={() => <h1>Page not Found!</h1>} />\r\n  </Switch>\r\n);\r\n","import {\r\n  CategoryFilterState,\r\n  CategoryFilterActionTypes,\r\n  FILTER_REQUEST,\r\n  FILTER_SUCCESS,\r\n} from 'src/store/category-filter/types';\r\n\r\nconst INITIAL_STATE: CategoryFilterState = {\r\n  recipes: [],\r\n  categoryName: '',\r\n  loading: false,\r\n};\r\n\r\nexport const categoryFilter = (\r\n  state = INITIAL_STATE,\r\n  action: CategoryFilterActionTypes,\r\n): CategoryFilterState => {\r\n  switch (action.type) {\r\n    case FILTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        categoryName: action.payload.categoryName,\r\n        loading: true,\r\n      };\r\n\r\n    case FILTER_SUCCESS:\r\n      return { ...state, recipes: action.payload.recipes, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import FavoriteRecipeService from 'src/services/favorite-recipe.service';\r\n\r\nimport {\r\n  FavoriteRecipeState,\r\n  FavoriteRecipeActionTypes,\r\n  LOAD_FAVORITE_RECIPES,\r\n  REMOVE_FAVORITE_RECIPE,\r\n  SAVE_FAVORITE_RECIPE,\r\n} from './types';\r\n\r\nconst INITIAL_STATE: FavoriteRecipeState = {\r\n  recipes: FavoriteRecipeService.getFavorites(),\r\n};\r\n\r\nexport const favoriteRecipes = (\r\n  state = INITIAL_STATE,\r\n  action: FavoriteRecipeActionTypes,\r\n): FavoriteRecipeState => {\r\n  switch (action.type) {\r\n    case LOAD_FAVORITE_RECIPES:\r\n      return { ...state, recipes: action.payload.recipes };\r\n\r\n    case REMOVE_FAVORITE_RECIPE:\r\n      return {\r\n        ...state,\r\n        recipes: state.recipes.filter(\r\n          (recipe) => recipe.id !== action.payload.recipe.id,\r\n        ),\r\n      };\r\n\r\n    case SAVE_FAVORITE_RECIPE:\r\n      return { ...state, recipes: [...state.recipes, action.payload.recipe] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  LoadRecipeState,\r\n  LoadRecipeActionTypes,\r\n  LOAD_REQUEST,\r\n  LOAD_SUCCESS,\r\n} from 'src/store/load-recipe/types';\r\n\r\nconst INITIAL_STATE: LoadRecipeState = {\r\n  recipe: undefined,\r\n  loading: false,\r\n};\r\n\r\nexport const loadRecipe = (\r\n  state = INITIAL_STATE,\r\n  action: LoadRecipeActionTypes,\r\n): LoadRecipeState => {\r\n  switch (action.type) {\r\n    case LOAD_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case LOAD_SUCCESS:\r\n      return { ...state, loading: false, recipe: action.payload.recipe };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  MenuCategoryState,\r\n  MenuCategoryToggleAction,\r\n  TOGGLE,\r\n} from 'src/store/menu-category/types';\r\n\r\nconst initialState: MenuCategoryState = {\r\n  open: true,\r\n};\r\n\r\nexport const menuCategory = (\r\n  state = initialState,\r\n  action: MenuCategoryToggleAction,\r\n): MenuCategoryState => {\r\n  if (action.type === TOGGLE) {\r\n    return { open: !state.open };\r\n  }\r\n  return state;\r\n};\r\n","import {\r\n  SearchRecipeState,\r\n  SearchRecipeActionTypes,\r\n  SEARCH_REQUEST,\r\n  SEARCH_SUCCESS,\r\n} from './types';\r\n\r\nconst INITIAL_STATE: SearchRecipeState = {\r\n  term: '',\r\n  recipes: [],\r\n  loading: false,\r\n};\r\n\r\nexport const searchRecipe = (\r\n  state = INITIAL_STATE,\r\n  action: SearchRecipeActionTypes,\r\n): SearchRecipeState => {\r\n  switch (action.type) {\r\n    case SEARCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        term: action.payload.term,\r\n        loading: true,\r\n      };\r\n\r\n    case SEARCH_SUCCESS:\r\n      return { ...state, recipes: action.payload.recipes, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { history } from 'src/routes';\r\nimport { categoryFilter } from 'src/store/category-filter/reducer';\r\nimport { favoriteRecipes } from 'src/store/favorite-recipe/reducer';\r\nimport { loadRecipe } from 'src/store/load-recipe/reducer';\r\nimport { menuCategory } from 'src/store/menu-category/reducer';\r\nimport { searchRecipe } from 'src/store/search-recipe/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  router: connectRouter(history),\r\n  favoriteRecipes,\r\n  searchRecipe,\r\n  loadRecipe,\r\n  menuCategory,\r\n  categoryFilter,\r\n});\r\n\r\nconst middlewares = [routerMiddleware(history), thunk];\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares)),\r\n);\r\n","import { ConnectedRouter } from 'connected-react-router';\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { CategoryMenu } from 'src/components/layout/category-menu/CategoryMenu';\r\nimport { Footer } from 'src/components/layout/footer/Footer';\r\nimport { Search } from 'src/components/layout/search/Search';\r\nimport { TopBar } from 'src/components/layout/topbar/TopBar';\r\nimport { Routes as Content, history } from 'src/routes';\r\nimport { store } from 'src/store';\r\n\r\nexport const App: React.FC = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <TopBar />\r\n      <Container maxWidth=\"md\" className=\"app-container\">\r\n        <CategoryMenu />\r\n        <Search placeholder=\"Search Recipes...\" />\r\n        <Content />\r\n      </Container>\r\n      <Footer />\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from 'src/App';\r\n\r\nimport './global.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.feda6780.svg\";"],"sourceRoot":""}